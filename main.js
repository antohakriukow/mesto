(()=>{"use strict";var e={userEditBtn:document.querySelector(".user__edit-btn"),placeAddBtn:document.querySelector(".user__add-btn"),changeAvatarBtn:document.querySelector(".user__overlay"),userPopup:document.querySelector(".popup_user"),placePopup:document.querySelector(".popup_place"),fullscreenPopup:document.querySelector(".fullscreen-popup"),deleteAlertPopup:document.querySelector(".popup_delete-alert"),avatarPopup:document.querySelector(".popup_avatar"),popupNameInput:document.querySelector(".popup__input-field_name"),popupAboutInput:document.querySelector(".popup__input-field_about"),popupAvatarInput:document.querySelector(".popup__input-field_avatar"),smartSubmitters:document.querySelectorAll(".js-smartSubmitter"),cardTemplate:".card-template",popupInputFieldErrorActive:"popup__input-field-error_active",popupInputFieldError:"popup__input-field_error",popupSubmitBtnDisabled:"popup__submit-btn_disabled",formInputSelector:".popup__input-field",formSubmitSelector:".popup__submit-btn",cardAreaSelector:".card-items",mestoUrl:"https://mesto.nomoreparties.co/v1",mestoCohortId:"cohort-17",mestoToken:"c13b61bb-48e3-443e-a9a7-26bfb3cb5657"};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.headers=t.headers,this.url=t.url}var n,r;return n=e,(r=[{key:"getCheckedResponse",value:function(e){return e.ok?e.json():Promise.reject("Sorry, something went wrong. Error: ".concat(e.status))}},{key:"getUserData",value:function(){return fetch("".concat(this.url,"/users/me"),{headers:this.headers}).then(this.getCheckedResponse)}},{key:"setUserData",value:function(e){return fetch("".concat(this.url,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this.getCheckedResponse)}},{key:"setUserAvatar",value:function(e){return fetch("".concat(this.url,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then(this.getCheckedResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this.url,"/cards"),{headers:this.headers}).then(this.getCheckedResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this.url,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this.getCheckedResponse)}},{key:"removeCard",value:function(e){return fetch("".concat(this.url,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then(this.getCheckedResponse)}},{key:"likeCard",value:function(e){return fetch("".concat(this.url,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then(this.getCheckedResponse)}},{key:"dislikeCard",value:function(e){return fetch("".concat(this.url,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then(this.getCheckedResponse)}}])&&t(n.prototype,r),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._place=t.name,this._url=t.link,this._cardId=t._id,this._cardOwnerId=t.owner._id,this._likeQuanity=t.likes.length,this._likes=t.likes,this._userId=i,this._selector=n,this._handleCardClick=r.handleCardClick,this._setLike=r.setLike,this._removeLike=r.removeLike,this._handleCardRemove=r.handleCardRemove,this._handleDeleteButtonClick=o}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0).querySelector(".card")}},{key:"getIdForDelete",value:function(e){return"id for delete = ".concat(e.path[2].id)}},{key:"handleDelete",value:function(){this._element.remove(),this._element=null}},{key:"_handleLike",value:function(){var e=this;void 0===this._likes.find((function(t){return t._id==e._userId}))?this._setLike(this._element.id).then((function(t){e._element.querySelector(".card__like-counter").innerText=t.likes.length,e._element.querySelector(".card__heart-btn").classList.toggle("card__heart-btn_active"),e._likes=t.likes})):this._removeLike(this._element.id).then((function(t){e._element.querySelector(".card__like-counter").innerText=t.likes.length,e._element.querySelector(".card__heart-btn").classList.toggle("card__heart-btn_active"),e._likes=t.likes}))}},{key:"_setListeners",value:function(){var e=this;null!==this._cardDeleteBtn&&this._element.querySelector(".card__trash-btn").addEventListener("click",(function(){e._handleDeleteButtonClick(e)})),this._element.querySelector(".card__heart-btn").addEventListener("click",(function(){return e._handleLike()})),this._element.querySelector(".card__img").addEventListener("click",(function(){return e._handleCardClick(e._place,e._url)}))}},{key:"getElement",value:function(){var e=this;this._element=this._getTemplate(),this._cardDeleteBtn=this._element.querySelector(".card__trash-btn");var t=this._element.querySelector(".card__img");return this._element.querySelector(".card__title").innerText=this._place,t.setAttribute("src",this._url),t.setAttribute("alt",this._place),this._element.setAttribute("id",this._cardId),this._element.querySelector(".card__like-counter").innerText=this._likeQuanity,this._userId!==this._cardOwnerId&&(this._cardDeleteBtn.remove(),this._cardDeleteBtn=null),void 0!==this._likes.find((function(t){return t._id==e._userId}))&&this._element.querySelector(".card__heart-btn").classList.toggle("card__heart-btn_active"),this._setListeners(),this._element}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._formInputErrorActiveClass=t.popupInputFieldErrorActive,this._popupInputFieldError=t.popupInputFieldError,this._popupSubmitBtnDisabled=t.popupSubmitBtnDisabled,this._formInputSelector=t.formInputSelector,this._formSubmitSelector=t.formSubmitSelector,this._inputFields=Array.from(n.querySelectorAll(t.formInputSelector)),this._submitBtn=n.querySelector(t.formSubmitSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error")),r=n.previousElementSibling;n.textContent=t,n.classList.add(this._formInputErrorActiveClass),r.classList.add(this._popupInputFieldError)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error")),n=t.previousElementSibling;t.textContent="",t.classList.remove(this._formInputErrorActiveClass),n.classList.remove(this._popupInputFieldError)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputFields.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitBtn.classList.add(this._popupSubmitBtnDisabled),this._submitBtn.setAttribute("disabled",!0)):(this._submitBtn.classList.remove(this._popupSubmitBtnDisabled),this._submitBtn.removeAttribute("disabled"))}},{key:"_setValidationEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._formInputSelector)),n=this._formElement.querySelector(this._formSubmitSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e.toggleButtonState(t,n)}))})),this.toggleButtonState(t,n)}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setValidationEventListeners()}}])&&i(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=document.querySelector(".body"),s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){c.classList.add("body_noscroll"),this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),c.classList.remove("body_noscroll"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close-btn").addEventListener("click",(function(){return e.close()})),this._popup.addEventListener("click",(function(t){e._closePopupByClickOnOverlay(t)}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closePopupByClickOnOverlay",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"showButton",value:function(){console.log(this._popup.querySelector(".popup__submit-btn").textContent)}}])&&a(t.prototype,n),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitFunction=t,n._inputContainer=n._popup.querySelector(".popup__input-container"),n._inputFields=n._inputContainer.querySelectorAll(".popup__input-field"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputFields.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"close",value:function(){f(y(u.prototype),"close",this).call(this),this._inputContainer.reset()}},{key:"setEventListeners",value:function(){var e=this;f(y(u.prototype),"setEventListeners",this).call(this),this._inputContainer.addEventListener("submit",(function(t){e._submitFunction(t,e._getInputValues())}))}}])&&p(t.prototype,n),u}(s);function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(e,t,n){return(k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function u(){return m(this,u),i.apply(this,arguments)}return t=u,(n=[{key:"open",value:function(e,t){this._popup.querySelector(".fullscreen-popup__title").textContent=e,this._popup.querySelector(".fullscreen-popup__img").src=t,k(E(u.prototype),"open",this).call(this)}}])&&b(t.prototype,n),u}(s);function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.reverse().forEach((function(e){t._renderer(e)}))}}])&&C(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"getuserAvatar",value:function(){return this._avatar.src}},{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._about.textContent=t}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&O(t.prototype,n),e}();function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(e,t,n){return(q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function R(e,t){return!t||"object"!==L(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function D(e){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function B(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var T={handleCardClick:function(e,t){return M.open(e,t)},renderCards:function(){N.getInitialCards().then((function(e){return H.renderItems(e)})).catch((function(e){return console.log(e)}))},addNewCard:function(e,t){e.preventDefault();var n={name:t.place,link:t.url};N.addCard(n).then((function(e){V(e),z.close()})).catch((function(e){return console.log(e)}))},setLike:function(e){return N.likeCard(e).catch((function(e){return e}))},removeLike:function(e){return N.dislikeCard(e).catch((function(e){return e}))},showAlertPopup:function(){return F.open()},handlePlacePopupBtn:function(){$.toggleButtonState(),z.open()}};function x(t){t?Array.from(e.smartSubmitters).forEach((function(e){e.value="Сохранение..."})):Array.from(e.smartSubmitters).forEach((function(e){e.value="Сохранить"}))}var F=new(function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._deleteSubmitter=t._popup.querySelector(".js-delete_submitter"),t.submitFunction=null,t}return t=u,(n=[{key:"setSubmitFunction",value:function(e){this.submitFunction=e}},{key:"setEventListeners",value:function(){var e=this;q(D(u.prototype),"setEventListeners",this).call(this),this._deleteSubmitter.addEventListener("click",(function(t){t.preventDefault(),e.submitFunction()}))}}])&&A(t.prototype,n),u}(s))(e.deleteAlertPopup);function U(e){F.open(),F.setSubmitFunction((function(){N.removeCard(e._cardId).then((function(){e.handleDelete(),F.close()}))}))}F.setEventListeners();var V=function(t){var n=new o(t,e.cardTemplate,T,U,W).getElement();H.addItem(n)},N=new n({url:"".concat(e.mestoUrl,"/").concat(e.mestoCohortId),headers:{"Content-Type":"application/json",authorization:e.mestoToken}}),H=new I({items:N.getInitialCards().then((function(e){return e})),renderer:function(e){V(e)}},e.cardAreaSelector),J=new P({name:".user__name",about:".user__about",avatar:".user__photo"});new u(e,e.userPopup).enableValidation();var M=new w(e.fullscreenPopup);M.setEventListeners();var Q=new _(e.userPopup,(function(e,t){e.preventDefault(),x(!0),N.setUserData(t).then((function(e){J.setUserInfo(e.name,e.about),Q.close()})).catch((function(e){return console.log(e)})).finally((function(){return x(!1)}))}));Q.setEventListeners();var z=new _(e.placePopup,T.addNewCard);z.setEventListeners();var $=new u(e,e.placePopup);$.enableValidation();var G=new _(e.avatarPopup,(function(e,t){e.preventDefault(),x(!0),N.setUserAvatar(t).then((function(e){J.setUserAvatar(e.avatar),G.close()})).catch((function(e){return console.log(e)})).finally((function(){return x(!1)}))}));G.setEventListeners();var K=new u(e,e.avatarPopup);K.enableValidation(),e.userEditBtn.addEventListener("click",(function(){var t=J.getUserInfo();e.popupNameInput.value=t.name,e.popupAboutInput.value=t.about,Q.open()})),e.placeAddBtn.addEventListener("click",T.handlePlacePopupBtn),e.changeAvatarBtn.addEventListener("click",(function(){var t=J.getuserAvatar();e.popupAvatarInput.value=t,K.toggleButtonState(),G.open()}));var W="";Promise.all([N.getInitialCards(),N.getUserData()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return B(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?B(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];W=i._id,J.setUserInfo(i.name,i.about),J.setUserAvatar(i.avatar),H.renderItems(o)})).catch((function(e){return console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,