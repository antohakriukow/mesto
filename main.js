(()=>{"use strict";var e={userEditBtn:document.querySelector(".user__edit-btn"),placeAddBtn:document.querySelector(".user__add-btn"),userPopup:document.querySelector(".popup_user"),placePopup:document.querySelector(".popup_place"),fullscreenPopup:document.querySelector(".fullscreen-popup"),popupNameInput:document.querySelector(".popup__input-field_name"),popupAboutInput:document.querySelector(".popup__input-field_about"),cardTemplate:".card-template",popupInputFieldErrorActive:"popup__input-field-error_active",popupInputFieldError:"popup__input-field_error",popupSubmitBtnDisabled:"popup__submit-btn_disabled",formInputSelector:".popup__input-field",formSubmitSelector:".popup__submit-btn",cardAreaSelector:".card-items"};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._place=t.place,this._url=t.url,this._selector=n,this._handleCardClick=r}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0).children[0]}},{key:"_handleDelete",value:function(){this._element.remove()}},{key:"_handleLike",value:function(){this._element.querySelector(".card__heart-btn").classList.toggle("card__heart-btn_active")}},{key:"_setListeners",value:function(){var e=this;this._element.querySelector(".card__trash-btn").addEventListener("click",(function(){return e._handleDelete()})),this._element.querySelector(".card__heart-btn").addEventListener("click",(function(){return e._handleLike()})),this._element.querySelector(".card__img").addEventListener("click",(function(){return e._handleCardClick()}))}},{key:"getElement",value:function(){this._element=this._getTemplate();var e=this._element.querySelector(".card__img");return this._element.querySelector(".card__title").innerText=this._place,e.setAttribute("src",this._url),e.setAttribute("alt",this._place),this._setListeners(),this._element}}])&&t(n.prototype,r),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._formInputErrorActiveClass=t.popupInputFieldErrorActive,this._popupInputFieldError=t.popupInputFieldError,this._popupSubmitBtnDisabled=t.popupSubmitBtnDisabled,this._formInputSelector=t.formInputSelector,this._formSubmitSelector=t.formSubmitSelector}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error")),r=n.previousElementSibling;n.textContent=t,n.classList.add(this._formInputErrorActiveClass),r.classList.add(this._popupInputFieldError)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error")),n=t.previousElementSibling;t.textContent="",t.classList.remove(this._formInputErrorActiveClass),n.classList.remove(this._popupInputFieldError)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._popupSubmitBtnDisabled),t.setAttribute("disabled",!0)):(t.classList.remove(this._popupSubmitBtnDisabled),t.removeAttribute("disabled"))}},{key:"_setValidationEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._formInputSelector)),n=this._formElement.querySelector(this._formSubmitSelector);t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))})),this._toggleButtonState(t,n)}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setValidationEventListeners()}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=document.querySelector(".body"),c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){u.classList.add("body_noscroll"),this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),u.classList.remove("body_noscroll"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close-btn").addEventListener("click",(function(){return e.close()})),this._popup.addEventListener("click",(function(t){e._closePopupByClickOnOverlay(t)}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closePopupByClickOnOverlay",value:function(e){e.target===e.currentTarget&&this.close()}}])&&i(t.prototype,n),e}();function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitFunction=t,n._inputContainer=n._popup.querySelector(".popup__input-container"),n._inputFields=n._inputContainer.querySelectorAll(".popup__input-field"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputFields.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"close",value:function(){s(d(u.prototype),"close",this).call(this),this._inputContainer.reset()}},{key:"setEventListeners",value:function(){var e=this;s(d(u.prototype),"setEventListeners",this).call(this),this._inputContainer.addEventListener("submit",(function(t){e._submitFunction(t,e._getInputValues())}))}}])&&l(t.prototype,n),u}(c);function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return(m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==_(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function S(e){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function u(){return h(this,u),i.apply(this,arguments)}return t=u,(n=[{key:"open",value:function(e){var t=e.place,n=e.url;this._popup.querySelector(".fullscreen-popup__title").textContent=t,this._popup.querySelector(".fullscreen-popup__img").src=n,m(S(u.prototype),"open",this).call(this)}}])&&v(t.prototype,n),u}(c);function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){e._renderer(t)}))}}])&&k(t.prototype,n),e}();function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){var n=t.name,r=t.about;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._about.textContent=t}}])&&I(t.prototype,n),e}(),L=new g(e.fullscreenPopup);function C(t){var r=new n(t,e.cardTemplate,(function(){return L.open(t)})).getElement();P.addItem(r)}L.setEventListeners();var P=new w({items:[{place:"Архыз",url:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{place:"Челябинская область",url:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{place:"Иваново",url:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{place:"Камчатка",url:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{place:"Холмогорский район",url:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{place:"Байкал",url:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){C(e)}},e.cardAreaSelector);P.renderItems();var j=new O({name:".user__name",about:".user__about"});new o(e,e.userPopup).enableValidation();var q=new y(e.userPopup,(function(e,t){e.preventDefault(),j.setUserInfo(t.name,t.about),q.close()}));q.setEventListeners(),e.userEditBtn.addEventListener("click",(function(){var t=j.getUserInfo();e.popupNameInput.value=t.name,e.popupAboutInput.value=t.about,q.open()})),new o(e,e.placePopup).enableValidation();var x=new y(e.placePopup,(function(e,t){e.preventDefault(),C(t),x.close()}));x.setEventListeners(),e.placeAddBtn.addEventListener("click",(function(){x.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,